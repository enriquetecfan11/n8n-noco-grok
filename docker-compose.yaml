volumes:
  n8n_storage: {}
  postgres_storage: {}

networks:
  redbot:
    driver: bridge

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks:
      - redbot
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"']
      interval: 10s
      timeout: 2s
      retries: 10

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    networks:
      - redbot
    ports:
      - 5678:5678  # Solo expone este puerto
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_EXPRESS_TRUST_PROXY=true
      - WEBHOOK_URL=
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=
      - N8N_BASIC_AUTH_PASSWORD=
    volumes:
      - n8n_storage:/home/node/.n8n

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    networks:
      - redbot
    ports:
      - 6333:6333
    volumes:
      - ./qdrant_data:/root/.qdrant 

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    networks: 
      - redbot
