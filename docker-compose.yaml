<<<<<<< HEAD
volumes:
  n8n_storage: {}
  postgres_storage: {}
  nc_data: {}
  qdrant_storage: {}

networks:
  demo: {}

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - WEBHOOK_URL=${NGROK_SUBDOMAIN}
  links:
    - postgres

services:
  postgres:
    image: postgres:16-alpine
    networks: ['demo']
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"']
      interval: 10s
      timeout: 2s
      retries: 10

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
=======
networks:
    proxy:
        name: proxy

services:
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "80:80"
      - "81:81" # Admin interface
      - "443:443"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    environment:
      - DISABLE_IPV6=true
    networks:
      - proxy

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks:
      - proxy
>>>>>>> 5f80ee441ce9b43d789ea3ac93a4cfd47af11c84

  ngrok:
    image: ngrok/ngrok:latest
<<<<<<< HEAD
    restart: unless-stopped
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - WEBHOOK_URL=${NGROK_SUBDOMAIN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    networks: ['demo']
=======
    container_name: ngrok
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_REGION=eu
    command: 
      - "http"
      - "--log=stdout"
      - "--log-level=debug"
      - "--host-header=localhost"
      - "--url=${NGROK_DOMAIN_NAME}"
      - "nginx-proxy-manager:81"
    networks:
      - proxy
    depends_on:
      - nginx-proxy-manager

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    environment:
      - N8N_EDITOR_BASE_URL=https://${NGROK_DOMAIN_NAME}/n8n
      - N8N_ENDPOINT_REST=rest 
      - N8N_PATH=/n8n
      - WEBHOOK_URL=https://${NGROK_DOMAIN_NAME}/n8n/
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - proxy
>>>>>>> 5f80ee441ce9b43d789ea3ac93a4cfd47af11c84

  nocodb:
    image: nocodb/nocodb:latest
<<<<<<< HEAD
    restart: unless-stopped
    networks: ['demo']
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_CONNECTION_STRING=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PORT=8080
      - JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    ports:
      - "8081:8080"
    volumes:
      - nc_data:/usr/app/data

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
=======
    container_name: nocodb
    environment:
      - NC_DB=sqlite3:/usr/app/data/nocodb.db
      - NC_PUBLIC_URL=https://${NGROK_DOMAIN_NAME} # Subdominio para NocoDB
      - NC_DISABLE_TELE=true
    volumes:
      - nocodb_data:/usr/app/data
    networks:
      - proxy

volumes:
  n8n_data:
    external: true
  nocodb_data:
    external: true
>>>>>>> 5f80ee441ce9b43d789ea3ac93a4cfd47af11c84
